Sappiate che se avete seguito install.txt ora avete quasi pieni poteri sul
repository appunti condivisi. Intendo che ora potete modificare tutti i file 
(e intendo anche cancellarli) che si trovano sul repository e le vostre modifiche
saranno effettive su tutte le copie locali dei repository. 
Come sapete da grandi poteri derivano grandi responsabilità... state attenti e non
fate cazzate.
Allo stesso tempo sappiate che voi NON avete pieni poteri... nel senso che qualsiasi
modifica voi facciate io (Federico Glaudo) posso annullarla. In particolare quindi
se cancellate un file per errore e non riuscite più a rimetterlo (cosa che comunque
dovreste poter fare) non è un dramma... tutto si risolve.
Ancora un paio di suggerimenti generali sull'uso di git e github:
	Qualsiasi cosa voi mettiate sul repository potete assumere che, per quanto
	vi impegnerete, rimarrà per sempre nella history... quindi se per sbaglio ci
	mettete una vostra password è un vero problema che neanche io (Federico Glaudo)
	potrà risolvere in maniera facile. È una cosa che succede, per questo vi avverto.
	

Git è un software di controllo di versione distribuito (wiki). 
Questo vuol dire che fondamentalmente dà la possibilità ad un gruppo di persone
di avere dei file "in comune" e di tenere una storia degli aggiornamenti che
subiscono questi file. È molto comodo per tenere ad esempio degli appunti condi-
visi (infatti non siamo i primi a pensarci).

Ora passiamo ai fatti.
Io (Federico Glaudo) non sono un esperto di git. Conosco solo 3-4 comandi di base
per farlo funzionare quanto serve. Ma a voi va ancora meglio... visto che come ho 
detto NON avete pieni poteri sul repository fondamentalmente quei 3-4 comandi che
io conosco sono tutti quelli che vi servono.

Tutti i comandi che seguono devono essere lanciati da dentro la cartella locale
corrispondente al repository.

git pull
	Questo comando serve a scaricare dal server l'ultima versione del repository
	e sostituirla a quanto sta nella vostra cartella locale.
	Lo dovete lanciare stando dentro la cartella di un repository. E aggiornerà
	tutto il repo, non solo la subdirectory in cui eventualemente state.
	Se avete fatto delle modifiche a dei file lui è furbo e non ve le cancella.
	Suggerisco di lanciare sempre git pull prima di fare git commit o git push...
	è una piccola accortezza in più per evitare problemi.

git commit FILE -m "Commento"
	Anche questo comando va lanciato da dentro una